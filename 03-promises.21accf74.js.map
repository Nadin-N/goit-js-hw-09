{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,aAAcC,SAASC,cAAc,kBACrCC,YAAaF,SAASC,cAAc,iBACpCE,SAAUH,SAASC,cAAc,mBACjCG,OAAQJ,SAASC,cAAc,UAsCjC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAEpDI,EAAK,sBAAqCK,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,GAEnDA,E,IAML,OAJAC,EAAQF,SAAWA,EACnBE,EAAQD,MAAQA,EAChBU,QAAQC,IAAIV,GAELA,C,CAlDTV,EAAKM,OAAOe,iBAAiB,UAE7B,SAAkBC,GAChBA,EAAEC,iBAQF,IANA,IAAMC,EAAaC,OAAOzB,EAAKC,aAAayB,OACtCC,EAAOF,OAAOzB,EAAKI,YAAYsB,OAC/BE,EAASH,OAAOzB,EAAKK,SAASqB,OAEhCjB,EAAQe,EAEHK,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCtB,EAAcsB,EAAGpB,GACdqB,MAAK,SAAAC,GACJC,EAAAlC,GAASmC,OAAOC,QAAQH,E,IAEzBI,OAAM,SAAAC,GACLJ,EAAAlC,GAASmC,OAAOI,QAAQD,E,IAc5B3B,GAASkB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  firstDelayEl: document.querySelector('[name=\"delay\"]'),\n  delayStepEl: document.querySelector('[name=\"step\"]'),\n  amountEl: document.querySelector('[name=\"amount\"]'),\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const delayValue = Number(refs.firstDelayEl.value);\n  const step = Number(refs.delayStepEl.value);\n  const amount = Number(refs.amountEl.value);\n\n  let delay = delayValue;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(positive => {\n        Notiflix.Notify.success(positive);\n      })\n      .catch(negative => {\n        Notiflix.Notify.failure(negative);\n      });\n    // .then(({ position, delay }) => {\n    //   console.log(position);\n    //   Notiflix.Notify.success(\n    //     `✅ Fulfilled promise ${position} in ${delay}ms`\n    //   );\n    // })\n    // .catch(({ position, delay }) => {\n    //   console.log(delay);\n    //   Notiflix.Notify.failure(\n    //     `❌ Rejected promise ${position} in ${delay}ms`\n    //   );\n    // });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  promise.position = position;\n  promise.delay = delay;\n  console.log(promise);\n  //   console.log(promise.position);\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","firstDelayEl","document","querySelector","delayStepEl","amountEl","formEl","$ce04d3a99e08e73b$var$createPromise","position","delay","promise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","console","log","addEventListener","e","preventDefault","delayValue","Number","value","step","amount","i","then","positive","$parcel$interopDefault","Notify","success","catch","negative","failure"],"version":3,"file":"03-promises.21accf74.js.map"}